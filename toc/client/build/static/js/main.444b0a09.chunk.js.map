{"version":3,"sources":["css/mod3intable.module.css","css/signup.module.css","css/signin.module.css","css/chngPW.module.css","css/table.module.css","css/index.module.css","css/navigator.module.css","components/Hello.js","servRoute.js","components/signup.js","components/signin.js","components/Search.js","components/table.js","components/tableIndex.js","components/navigator.js","components/useDetectOutsideClick.js","components/mod3inTable.js","components/mod3in.js","components/chngPW.js","components/resetpw.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Hello","className","style","btnShowdata","to","dataBtnLink","address","SignUp","history","useHistory","useState","userID","userPW","userPWconfirm","signupInfo","setSignupInfo","getValue","e","target","name","value","console","log","mainDiv","divInput","inputID","placeholder","onChange","inputPW","type","btnSignUp","onClick","alert","Axios","post","then","result","data","push","SignIn","signinInfo","setSigninInfo","btnSignIn","localStorage","setItem","forgotPW","Search","onSubmit","event","preventDefault","elements","filter","Table","columns","useTable","useGlobalFilter","useSortBy","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","setGlobalFilter","searchcomp","tableframe","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","tableth","render","row","cells","getRowProps","cell","getCellProps","tabletd","TableIndex","viewContents","setViewContents","useMemo","accessor","Header","get","response","Navigator","location","useLocation","getLocal","getItem","userId","setUserId","useEffect","isActive","setIsActive","dropdownRef","useRef","el","initialState","current","contains","window","addEventListener","removeEventListener","useDetectOutsideClick","linkTitle","title","btnDiv","btnSign","Link","menuscontainer","ref","menu","active","inactive","Toc3inTable","fst1in","scd1in","stu2in","stu3in","tocInfo","setTocInfo","chngeValue","length","defaultValue","disabled","tocData","btnModify","Mod3in","ChangePW","currentPW","chngPW","confChngPW","passwordInfo","setPasswordInfo","resonse","ResetPw","App","basename","process","scopeInUp","path","exact","component","Modify3in","ChangePassword","components","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.444b0a09.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableframe\":\"mod3intable_tableframe__2dpwz\",\"tableth\":\"mod3intable_tableth__33V5s\",\"tabletd\":\"mod3intable_tabletd__sPtAN\",\"btnModify\":\"mod3intable_btnModify__20sxi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainDiv\":\"signup_mainDiv__1VDUO\",\"inputID\":\"signup_inputID__BivzD\",\"inputPW\":\"signup_inputPW__1Ldw4\",\"divInput\":\"signup_divInput__2bNtD\",\"btnSignUp\":\"signup_btnSignUp__1FnUA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainDiv\":\"signin_mainDiv__3E7DH\",\"inputID\":\"signin_inputID__1-m5s\",\"inputPW\":\"signin_inputPW__27fLB\",\"divInput\":\"signin_divInput__3mQV4\",\"btnSignIn\":\"signin_btnSignIn__5TO2A\",\"forgotPW\":\"signin_forgotPW___XJSW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainDiv\":\"chngPW_mainDiv__2wkhT\",\"inputPW\":\"chngPW_inputPW__1BnZI\",\"divInput\":\"chngPW_divInput__K0Wh5\",\"btnSignUp\":\"chngPW_btnSignUp__1F6QP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableframe\":\"table_tableframe__26wwS\",\"tableth\":\"table_tableth__vVW5u\",\"tabletd\":\"table_tabletd__3RABZ\",\"searchcomp\":\"table_searchcomp__2Rm74\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnShowdata\":\"css_btnShowdata__1bckJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainDiv\":\"navigator_mainDiv__3xyFp\",\"title\":\"navigator_title__26js2\",\"btnDiv\":\"navigator_btnDiv__2o-ZU\",\"btnSign\":\"navigator_btnSign__21M6U\",\"Link\":\"navigator_Link__2mymR\",\"linkTitle\":\"navigator_linkTitle__1vJHM\",\"menuscontainer\":\"navigator_menuscontainer__32LoA\",\"menustrigger\":\"navigator_menustrigger__1d1Hl\",\"menu\":\"navigator_menu__2P58v\",\"active\":\"navigator_active__2IN_a\"};","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport style from \"../css/index.module.css\";\n\nfunction Hello() {\n  return (\n    <button className={`${style.btnShowdata}`}>\n      <Link to=\"/scope3in\" className={`${style.dataBtnLink}`}>\n        데이터 보기\n      </Link>\n    </button>\n  );\n}\n\nexport default Hello;\n","export const address = \"http://localhost:1234\";\n\nexport default address;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport style from \"../css/signup.module.css\";\nimport Axios from \"axios\";\nimport address from \"../servRoute\";\n\nfunction SignUp() {\n  let history = useHistory();\n  const [signupInfo, setSignupInfo] = useState({\n    userID: \"\",\n    userPW: \"\",\n    userPWconfirm: \"\",\n  });\n\n  const submitReview = () => {\n    if (\n      signupInfo.userPW === \"\" ||\n      signupInfo.userPWconfirm === \"\" ||\n      signupInfo.userID === \"\"\n    ) {\n      alert(\"입력한 정보를 확인해주세요.\");\n    } else if (signupInfo.userPW !== signupInfo.userPWconfirm) {\n      alert(\"비밀번호를 확인해주세요.\");\n    } else {\n      Axios.post(address + \"/api/insert\", {\n        userID: signupInfo.userID,\n        userPW: signupInfo.userPW,\n      }).then((result) => {\n        var getResult = result.data.result;\n        if (getResult === 0) {\n          alert(\"이미 사용 중인 아이디 입니다.\");\n        } else {\n          alert(\"회원가입 성공!\");\n          history.push(\"/signin\");\n        }\n      });\n    }\n  };\n\n  const getValue = (e) => {\n    const { name, value } = e.target;\n    setSignupInfo({\n      ...signupInfo,\n      [name]: value,\n    });\n    console.log(signupInfo);\n  };\n\n  return (\n    <div className={`${style.mainDiv}`}>\n      <div className={`${style.divInput}`}>\n        <input\n          className={`${style.inputID}`}\n          placeholder=\"ID\"\n          name=\"userID\"\n          onChange={getValue}\n        ></input>\n        <br />\n        <br />\n        <input\n          className={`${style.inputPW}`}\n          placeholder=\"PW\"\n          type=\"password\"\n          name=\"userPW\"\n          onChange={getValue}\n        ></input>\n        <br />\n        <br />\n        <input\n          className={`${style.inputPW}`}\n          placeholder=\"PW_CONFIRM\"\n          type=\"password\"\n          name=\"userPWconfirm\"\n          onChange={getValue}\n        ></input>\n        <br />\n        <br />\n        <button\n          className={`${style.btnSignUp}`}\n          onClick={submitReview}\n          type=\"submit\"\n        >\n          SIGN UP\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default SignUp;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport style from \"../css/signin.module.css\";\nimport Axios from \"axios\";\nimport address from \"../servRoute\";\nimport { Link } from \"react-router-dom\";\n\nfunction SignIn() {\n  let history = useHistory();\n  const [signinInfo, setSigninInfo] = useState({\n    userID: \"\",\n    userPW: \"\",\n  });\n\n  const submitReview = () => {\n    Axios.post(address + \"/api/login\", signinInfo).then((result) => {\n      // alert(\"로그인 전송 완료!\");\n      console.log(result.data.result);\n      if (result.data.result === 1) {\n        localStorage.setItem(\"userInfo\", signinInfo.userID);\n        history.push(\"/\");\n      } else {\n        alert(\"로그인 정보를 확인하세요.\");\n      }\n    });\n  };\n\n  const getValue = (e) => {\n    const { name, value } = e.target;\n    setSigninInfo({\n      ...signinInfo,\n      [name]: value,\n    });\n    console.log(signinInfo);\n  };\n\n  return (\n    <div className={`${style.mainDiv}`}>\n      <div className={`${style.divInput}`}>\n        <input\n          className={`${style.inputID}`}\n          placeholder=\"ID\"\n          name=\"userID\"\n          onChange={getValue}\n        ></input>\n        <br />\n        <br />\n        <input\n          className={`${style.inputPW}`}\n          placeholder=\"PW\"\n          name=\"userPW\"\n          type=\"password\"\n          onChange={getValue}\n        ></input>\n        <br />\n        <br />\n        <button\n          className={`${style.btnSignIn}`}\n          onClick={submitReview}\n          type=\"submit\"\n        >\n          SIGN IN\n        </button>\n        <br />\n        <br />\n        <Link to=\"/resetPW\" className={`${style.forgotPW}`}>\n          비밀번호를 잊으셨나요?\n        </Link>\n      </div>\n    </div>\n  );\n}\n\nexport default SignIn;\n","import React from \"react\";\n\nfunction Search({ onSubmit }) {\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    onSubmit(event.target.elements.filter.value);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input name=\"filter\" />\n      <button>Search</button>\n    </form>\n  );\n}\n\nexport default Search;\n","import React from \"react\";\nimport { useTable, useGlobalFilter, useSortBy } from \"react-table\";\nimport Search from \"./Search\";\nimport style from \"../css/table.module.css\";\n\nfunction Table({ columns, data }) {\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    setGlobalFilter,\n  } = useTable({ columns, data }, useGlobalFilter, useSortBy);\n\n  return (\n    <>\n      <div className={`${style.searchcomp}`}>\n        <Search onSubmit={setGlobalFilter} />\n      </div>\n      <table {...getTableProps()} className={`${style.tableframe}`}>\n        <thead>\n          {headerGroups.map((headerGroup) => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                <th\n                  {...column.getHeaderProps(column.getSortByToggleProps())}\n                  className={`${style.tableth}`}\n                >\n                  {column.render(\"Header\")}\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {rows.map((row) => {\n            prepareRow(row);\n            if (row.cells[1].value === \"차민재\") {\n              return (\n                <tr {...row.getRowProps()}>\n                  {row.cells.map((cell) => (\n                    <td {...cell.getCellProps()} className={`${style.tabletd}`}>\n                      {cell.render(\"Cell\")}\n                    </td>\n                  ))}\n                </tr>\n              );\n            } else {\n              return (\n                <tr {...row.getRowProps()}>\n                  {row.cells.map((cell) => (\n                    <td {...cell.getCellProps()} className={`${style.tabletd}`}>\n                      {cell.render(\"Cell\")}\n                    </td>\n                  ))}\n                </tr>\n              );\n            }\n          })}\n        </tbody>\n      </table>\n    </>\n  );\n}\n\nexport default Table;\n","import React, { useState, useMemo } from \"react\";\nimport Axios from \"axios\";\nimport Table from \"./table\";\nimport address from \"../servRoute\";\n\nfunction TableIndex() {\n  const [viewContents, setViewContents] = useState([]);\n\n  //   const columns = [\"index\", \"Student\", \"1in-1\", \"1in-2\", \"2in\", \"3in\"];\n  //   idx, stu_name, fst1in, scd1in, stu2in, stu3in\n  const columns = useMemo(\n    () => [\n      {\n        accessor: \"idx\",\n        Header: \"index\",\n      },\n      {\n        accessor: \"stu_name\",\n        Header: \"Student\",\n      },\n      {\n        accessor: \"fst1in\",\n        Header: \"1in-1\",\n      },\n      {\n        accessor: \"scd1in\",\n        Header: \"1in-2\",\n      },\n      {\n        accessor: \"stu2in\",\n        Header: \"2in\",\n      },\n      {\n        accessor: \"stu3in\",\n        Header: \"3in\",\n      },\n    ],\n    []\n  );\n\n  // useEffect 마지막 파라미터에 빈 배열 넣으면 한 번만 실행한다는 뜻이다.\n  useMemo(() => {\n    Axios.get(address + \"/api/get/3in\").then((response) => {\n      setViewContents(response.data);\n      console.log(response.data);\n    });\n  }, []);\n\n  return <Table columns={columns} data={viewContents} />;\n}\n\nexport default TableIndex;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport style from \"../css/navigator.module.css\";\nimport { Link } from \"react-router-dom\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { useDetectOutsideClick } from \"./useDetectOutsideClick\";\n\nconst Navigator = () => {\n  let history = useHistory();\n  const location = useLocation();\n  const getLocal = localStorage.getItem(\"userInfo\");\n  const [userId, setUserId] = useState(null);\n\n  useEffect(() => {\n    setUserId(getLocal);\n    console.log(\"Location is changed\");\n    if (isActive) {\n      setIsActive(!isActive);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [getLocal, location]);\n\n  const doLogout = () => {\n    localStorage.setItem(\"userInfo\", \"\");\n    setUserId(localStorage.getItem(\"userInfo\"));\n    console.log(typeof userId);\n    console.log(\"kk\", userId === \"\");\n    setIsActive(!isActive);\n    history.push(\"/\");\n  };\n\n  // Dropdown func\n\n  const dropdownRef = useRef(null);\n  const [isActive, setIsActive] = useDetectOutsideClick(dropdownRef, false);\n  const onClick = () => setIsActive(!isActive);\n\n  return (\n    <>\n      <div className={`${style.mainDiv}`}>\n        <Link to=\"/\" className={`${style.linkTitle}`}>\n          <span className={`${style.title}`}>\n            <b>TOC! ( beta )</b>\n          </span>\n        </Link>\n\n        {userId !== \"\" && userId != null ? (\n          <div className={`${style.btnDiv}`}>\n            {/* <Link to=\"/mod3in\" className={`${style.Link}`}>\n              <button className={`${style.btnSign}`}>@{getLocal}</button>\n            </Link> */}\n\n            {/* 드롭다운 메뉴 */}\n            <button onClick={onClick} className={`${style.btnSign}`}>\n              @{getLocal}\n            </button>\n\n            {/* <Link className={`${style.Link}`}> */}\n            {/* 로그인 시 아이디 표시 */}\n            {/* <button className={`${style.btnSign}`} onClick={doLogout}>\n              로그아웃\n            </button> */}\n            {/* </Link> */}\n          </div>\n        ) : (\n          <div className={`${style.btnDiv}`}>\n            <Link to=\"/signin\" className={`${style.Link}`}>\n              <button className={`${style.btnSign}`}>Sign In</button>\n            </Link>\n            <Link to=\"/signup\" className={`${style.Link}`}>\n              <button className={`${style.btnSign}`}>Sign Up</button>\n            </Link>\n            <Link to=\"/resetPW\" className={`${style.Link}`}>\n              <button className={`${style.btnSign}`}>reset</button>\n            </Link>\n          </div>\n        )}\n      </div>\n      <div className={`${style.menuscontainer}`}>\n        {/* <button onClick={onClick} className={`${style.menustrigger}`}>\n          <span>User</span>\n          <img\n            src=\"https://steamcdn-a.akamaihd.net/steamcommunity/public/images/avatars/df/df7789f313571604c0e4fb82154f7ee93d9989c6.jpg\"\n            alt=\"User avatar\"\n          />\n        </button> */}\n        <nav\n          ref={dropdownRef}\n          className={`${style.menu} ${\n            isActive ? style.active : style.inactive\n          }`}\n        >\n          <ul>\n            <li>\n              <Link to=\"/mod3in\" className={`${style.Link}`}>\n                <span>내 이수 현황</span>\n              </Link>\n            </li>\n            <li>\n              <Link to=\"/chngPW\" className={`${style.Link}`}>\n                <span>비밀번호 변경</span>\n              </Link>\n            </li>\n            <li>\n              <span onClick={doLogout}>로그아웃</span>\n            </li>\n          </ul>\n        </nav>\n      </div>\n    </>\n  );\n};\n\nexport default Navigator;\n","import { useState, useEffect } from \"react\";\n\n/**\n * Hook for handling closing when clicking outside of an element\n * @param {React.node} el\n * @param {boolean} initialState\n */\nexport const useDetectOutsideClick = (el, initialState) => {\n  const [isActive, setIsActive] = useState(initialState);\n\n  useEffect(() => {\n    const onClick = (e) => {\n      // If the active element exists and is clicked outside of\n      if (el.current !== null && !el.current.contains(e.target)) {\n        setIsActive(!isActive);\n      }\n    };\n\n    // If the item is active (ie open) then listen for clicks outside\n    if (isActive) {\n      window.addEventListener(\"click\", onClick);\n    }\n\n    return () => {\n      window.removeEventListener(\"click\", onClick);\n    };\n  }, [isActive, el]);\n\n  return [isActive, setIsActive];\n};\n","import React, { useState, useEffect } from \"react\";\nimport { useTable, useGlobalFilter, useSortBy } from \"react-table\";\nimport style from \"../css/mod3intable.module.css\";\nimport Axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport address from \"../servRoute\";\n\nfunction Toc3inTable({ columns, data }) {\n  let history = useHistory();\n  const { headerGroups } = useTable(\n    { columns, data },\n    useGlobalFilter,\n    useSortBy\n  );\n\n  const [tocInfo, setTocInfo] = useState({\n    fst1in: \"\",\n    scd1in: \"\",\n    stu2in: \"\",\n    stu3in: \"\",\n  });\n\n  const chngeValue = (e) => {\n    const { name, value } = e.target;\n    setTocInfo({\n      ...tocInfo,\n      [name]: value,\n    });\n    console.log(tocInfo);\n  };\n\n  const submitTocinfo = () => {\n    Axios.post(address + \"/api/prog/mod3in\", {\n      tocData: tocInfo,\n      userID: localStorage.getItem(\"userInfo\"),\n    }).then(() => {\n      alert(\"수정 완료!\");\n      history.push(\"/scope3in\");\n    });\n  };\n\n  useEffect(() => {\n    if (data.length === 0) {\n    } else {\n      setTocInfo({\n        ...tocInfo,\n        fst1in: data[0].fst1in,\n        scd1in: data[0].scd1in,\n        stu2in: data[0].stu2in,\n        stu3in: data[0].stu3in,\n      });\n      // console.log(tocInfo);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data]);\n\n  console.log(data);\n  console.log(\"data : \", tocInfo);\n\n  return (\n    <>\n      <table className={`${style.tableframe}`}>\n        <thead>\n          {headerGroups.map((headerGroup) => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                <th\n                  {...column.getHeaderProps(column.getSortByToggleProps())}\n                  className={`${style.tableth}`}\n                >\n                  {column.render(\"Header\")}\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody>\n          {data.map((row) => {\n            console.log(row.fst1in);\n            return (\n              <tr key=\"tr1\">\n                <td key=\"td1\" className={`${style.tabletd}`}>\n                  <select\n                    key=\"sel1\"\n                    name=\"fst1in\"\n                    onChange={chngeValue}\n                    defaultValue={row.fst1in}\n                  >\n                    <option key={row.fst1in + 1} value={row.fst1in} disabled>\n                      {row.fst1in}\n                    </option>\n                    <option key=\"미이수\" value=\"미이수\">\n                      미이수\n                    </option>\n                    <option\n                      key=\"창의융합을위한3D프린팅체험튜터링\"\n                      value=\"창의 융합을 위한 3D프린팅 체험 튜터링\"\n                    >\n                      창의 · 융합을 위한 3D프린팅 체험 튜터링\n                    </option>\n                  </select>\n                </td>\n                <td key=\"td2\" className={`${style.tabletd}`}>\n                  <select\n                    key=\"sel2\"\n                    name=\"scd1in\"\n                    onChange={chngeValue}\n                    defaultValue={row.scd1in}\n                  >\n                    <option key={row.scd1in + 1} value={row.scd1in} disabled>\n                      {row.scd1in}\n                    </option>\n                    <option key=\"미이수\" value=\"미이수\">\n                      미이수\n                    </option>\n                    <option\n                      key=\"창의융합을위한3D프린팅체험튜터링\"\n                      value=\"창의 융합을 위한 3D프린팅 체험 튜터링\"\n                    >\n                      창의 · 융합을 위한 3D프린팅 체험 튜터링\n                    </option>\n                  </select>\n                </td>\n                <td key=\"td3\" className={`${style.tabletd}`}>\n                  <select\n                    key=\"sel3\"\n                    name=\"stu2in\"\n                    onChange={chngeValue}\n                    defaultValue={row.stu2in}\n                  >\n                    <option key={row.stu2in + 1} value={row.stu2in} disabled>\n                      {row.stu2in}\n                    </option>\n                    <option key=\"미이수\" value=\"미이수\">\n                      미이수\n                    </option>\n                    <option\n                      key=\"SOC들어오는노트공모전\"\n                      value=\"SOC 들어오는 노트 공모전\"\n                    >\n                      SOC 들어오는 노트 공모전\n                    </option>\n                  </select>\n                </td>\n                <td key=\"td4\" className={`${style.tabletd}`}>\n                  <select\n                    key=\"sel4\"\n                    name=\"stu3in\"\n                    onChange={chngeValue}\n                    defaultValue={row.stu3in}\n                  >\n                    <option key={row.stu3in + 1} value={row.stu3in} disabled>\n                      {row.stu3in}\n                    </option>\n                    <option key=\"미이수\" value=\"미이수\">\n                      미이수\n                    </option>\n                    <option key=\"TOC튀는멘토링\" value=\"TOC 튀는 멘토링\">\n                      TOC 튀는 멘토링\n                    </option>\n                    <option key=\"FLY튜터링\" value=\"FLY 튜터링\">\n                      FLY 튜터링\n                    </option>\n                  </select>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n      <button\n        onClick={submitTocinfo}\n        type=\"submit\"\n        className={`${style.btnModify}`}\n      >\n        저장하기\n      </button>\n    </>\n  );\n}\n\nexport default Toc3inTable;\n","import React, { useMemo, useState } from \"react\";\nimport Axios from \"axios\";\nimport Toc3inTable from \"./mod3inTable\";\nimport address from \"../servRoute\";\n\nfunction Mod3in() {\n  const [viewContents, setViewContents] = useState([]);\n\n  //   const columns = [\"index\", \"Student\", \"1in-1\", \"1in-2\", \"2in\", \"3in\"];\n  //   idx, stu_name, fst1in, scd1in, stu2in, stu3in\n  const columns = useMemo(\n    () => [\n      {\n        accessor: \"fst1in\",\n        Header: \"1in-1\",\n      },\n      {\n        accessor: \"scd1in\",\n        Header: \"1in-2\",\n      },\n      {\n        accessor: \"stu2in\",\n        Header: \"2in\",\n      },\n      {\n        accessor: \"stu3in\",\n        Header: \"3in\",\n      },\n    ],\n    []\n  );\n\n  // useEffect 마지막 파라미터에 빈 배열 넣으면 한 번만 실행한다는 뜻이다.\n  // localstorage의 아이디 값을 보내고 리턴 받아오는거 구현하기\n  useMemo(() => {\n    Axios.post(address + \"/api/post/mod3in\", {\n      userID: localStorage.getItem(\"userInfo\"),\n    }).then((response) => {\n      setViewContents(response.data);\n    });\n  }, []);\n\n  return <Toc3inTable columns={columns} data={viewContents} />;\n}\n\nexport default Mod3in;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport style from \"../css/chngPW.module.css\";\nimport Axios from \"axios\";\nimport address from \"../servRoute\";\n\nfunction ChangePW() {\n  let history = useHistory();\n  const [passwordInfo, setPasswordInfo] = useState({\n    currentPW: \"\",\n    chngPW: \"\",\n    confChngPW: \"\",\n  });\n\n  // 현재 비밀번호가 맞는지 아닌지 확인\n  // 비밀번호가 맞으면 변경할 비밀번호하고 한 번 더 입력한 비밀번호가 맞는지 확인\n  // 나중에 합시다\n  const submitReview = () => {\n    // 서버에 요청해서 값 가져오기\n    var getValue = \"\";\n    Axios.post(address + \"/api/getPw\", {\n      userID: localStorage.getItem(\"userInfo\"),\n      userPW: passwordInfo.currentPW,\n    }).then((response) => {\n      getValue = response.data.result;\n      if (getValue) {\n        if (passwordInfo.chngPW === \"\" || passwordInfo.confChngPW === \"\") {\n          alert(\"비밀번호를 입력 해주세요.\");\n        } else {\n          if (passwordInfo.chngPW === passwordInfo.confChngPW) {\n            Axios.post(address + \"/api/updatepw\", {\n              userID: localStorage.getItem(\"userInfo\"),\n              chngPW: passwordInfo.confChngPW,\n            }).then((resonse) => {\n              if (response) {\n                alert(\"변경 완료!\");\n                history.push(\"/\");\n              }\n            });\n          } else {\n            alert(\"비밀번호가 다릅니다.\");\n          }\n        }\n      } else {\n        alert(\"비밀번호가 다릅니다.\");\n      }\n    });\n    // if (\n    //   passwordInfo.currentPW === \"\" ||\n    //   passwordInfo.chngPW === \"\" ||\n    //   passwordInfo.confChngPW === \"\"\n    // ) {\n    //   alert(\"입력한 정보를 확인해주세요.\");\n    // } else if (signupInfo.userPW !== signupInfo.userPWconfirm) {\n    //   alert(\"비밀번호를 확인해주세요.\");\n    // } else {\n    //   Axios.post(\"/api/insert\", {\n    //     userID: signupInfo.userID,\n    //     userPW: signupInfo.userPW,\n    //   }).then((result) => {\n    //     var getResult = result.data.result;\n    //     if (getResult === 0) {\n    //       alert(\"이미 사용 중인 아이디 입니다.\");\n    //     } else {\n    //       alert(\"회원가입 성공!\");\n    //       history.push(\"/signin\");\n    //     }\n    //   });\n    // }\n  };\n\n  const getValue = (e) => {\n    const { name, value } = e.target;\n    setPasswordInfo({\n      ...passwordInfo,\n      [name]: value,\n    });\n    console.log(passwordInfo);\n  };\n\n  return (\n    <div className={`${style.mainDiv}`}>\n      <div className={`${style.divInput}`}>\n        <input\n          className={`${style.inputPW}`}\n          placeholder=\"현재 비밀번호\"\n          type=\"password\"\n          name=\"currentPW\"\n          onChange={getValue}\n        ></input>\n        <br />\n        <br />\n        <input\n          className={`${style.inputPW}`}\n          placeholder=\"변경할 비밀번호\"\n          type=\"password\"\n          name=\"chngPW\"\n          onChange={getValue}\n        ></input>\n        <br />\n        <br />\n        <input\n          className={`${style.inputPW}`}\n          placeholder=\"변경할 비밀번호 확인\"\n          type=\"password\"\n          name=\"confChngPW\"\n          onChange={getValue}\n        ></input>\n        <br />\n        <br />\n        <button\n          className={`${style.btnSignUp}`}\n          onClick={submitReview}\n          type=\"submit\"\n        >\n          변경하기\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default ChangePW;\n","import React from \"react\";\n\nfunction ResetPw() {\n  return (\n    <>\n      <div>Hello!</div>\n      <div>Hello!</div>\n      <div>Hello!</div>;<div>Hello!</div>\n      <div>Hello!</div>\n      <div>Hello!</div>\n      <div>Hello!</div>\n      <div>Hello!</div>\n      <div>Hello!</div>\n      <div>Hello!</div>\n      <div>Hello!</div>\n      <div>Hello!</div>\n      <div>Hello!</div>\n      <div>Hello!</div>\n      <div>Hello!</div>\n      <div>Hello!</div>\n    </>\n  );\n}\n\nexport default ResetPw;\n","import \"./App.css\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport Hello from \"./components/Hello\";\nimport SignUp from \"./components/signup\";\nimport SignIn from \"./components/signin\";\nimport TableIndex from \"./components/tableIndex\";\nimport React from \"react\";\nimport Navigator from \"./components/navigator\";\nimport Modify3in from \"./components/mod3in\";\nimport ChangePassword from \"./components/chngPW\";\nimport ResetPw from \"./components/resetpw\";\n\nfunction App() {\n  return (\n    <div>\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Navigator scopeInUp={\"index\"} />\n        <Route path=\"/\" exact={true} component={Hello} />\n        <Route path=\"/signup\" component={SignUp} />\n        <Route path=\"/signin\" component={SignIn} />\n        <Route path=\"/scope3in\" component={TableIndex} />\n        <Route path=\"/mod3in\" component={Modify3in} />\n        <Route path=\"/chngPW\" component={ChangePassword} />\n        <Route path=\"/resetPW\" components={ResetPw} />\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  //<React.StrictMode>\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  //</React.StrictMode>\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}